<Window x:Class="SerialPortUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SerialPortUI"
        xmlns:tk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="MainWindow" 
        ContentRendered="Window_ContentRendered"
        Height="450" 
        Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="PowderBlue" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="PowderBlue" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="PowderBlue" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="LightSkyBlue" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="LightSkyBlue" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="LightSkyBlue" />
        <SolidColorBrush x:Key="RadioButton.Checked.Background" Color="LightSkyBlue" />
        <SolidColorBrush x:Key="RadioButton.Checked.Border" Color="LightSkyBlue" />
        <SolidColorBrush x:Key="RadioButton.Checked.Glyph" Color="LightSkyBlue" />
        <SolidColorBrush x:Key="RadioButton.UnChecked.Background" Color="Transparent" />
        <SolidColorBrush x:Key="RadioButton.UnChecked.Border" Color="Transparent" />
        <SolidColorBrush x:Key="RadioButton.UnChecked.Glyph" Color="Transparent" />
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />

        <Style TargetType="RadioButton">
            <Style.Setters>
                <Setter Property="Height" Value="20" />
            </Style.Setters>
        </Style>
        <Style x:Key="RadioButtonImageStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="9*" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" x:Name="mainBackGround" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" />
                            <Border x:Name="radioButtonBorder" Grid.Row="1"  Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" HorizontalAlignment="Stretch" Margin="1" VerticalAlignment="Stretch" Grid.ColumnSpan="2" />
                            <ContentPresenter x:Name="contentPresenter"  Grid.Column="0" Focusable="False" HorizontalAlignment="Stretch" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"  Width="Auto" Grid.ColumnSpan="2" Height="35" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource RadioButton.MouseOver.Background}" />
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}" />
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}" />
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource RadioButton.Disabled.Background}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}" />
                                <Setter Property="Background" TargetName="templateRoot" Value="Lime" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Checked.Glyph}" />
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Checked.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.UnChecked.Glyph}" />
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.UnChecked.Glyph}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="271*" />
            <ColumnDefinition Width="125*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition Height="359*" />
            <RowDefinition Height="30" x:Name="BottomIconRow" />
        </Grid.RowDefinitions>
        <DockPanel VerticalAlignment="Stretch" Grid.ColumnSpan="2" LastChildFill="True">
            <RadioButton Style="{StaticResource RadioButtonImageStyle}"
                         Width="60"
                         DockPanel.Dock="Left"
                         GroupName="PlayPauseStop"
                         Checked="btnPlay_Clicked">
                <Viewbox Child="{StaticResource PlayButtonIcon}" />
            </RadioButton>
            <RadioButton Style="{StaticResource RadioButtonImageStyle}"
                         Width="60"
                         DockPanel.Dock="Left"
                         GroupName="PlayPauseStop"
                         Checked="btnPlay_Clicked">
                <Viewbox Child="{StaticResource PauseButtonIcon}" />
            </RadioButton>
            <RadioButton Style="{DynamicResource RadioButtonImageStyle}"
                         Width="60" 
                         DockPanel.Dock="Left"
                         GroupName="PlayPauseStop" 
                         >
                <Viewbox Child="{StaticResource StopButtonIcon}" />
            </RadioButton>
            <Button Width="60" 
                    Background="Transparent"
                    BorderBrush="Transparent" 
                    BorderThickness="1"
                    DockPanel.Dock="Left"
                    Margin="20,0,0,0"
                    ToolTip="Click to show saved settings">
                <Viewbox Child="{StaticResource DatabaseButtonIcon}" Width="40" />
            </Button>
            <Button Click="btnDisplayDiscoveredCapabilities_Click"
                    Background="Transparent"
                    BorderBrush="PowderBlue"
                    BorderThickness="1"
                    DockPanel.Dock="Left"
                    ToolTip="Display discovered capabilities of board"
                    Width="60">
                <Viewbox Child="{StaticResource InfoButtonIcon}" />
            </Button>
            <StackPanel Width="150" DockPanel.Dock="Right">
                <Label Content="Baud rate" />
                <ComboBox SelectedIndex="1">
                    <ComboBoxItem Content="2400"/>
                    <ComboBoxItem Content="9600"/>
                    <ComboBoxItem Content="14400"/>
                    <ComboBoxItem Content="19200"/>
                    <ComboBoxItem Content="28800"/>
                    <ComboBoxItem Content="38400"/>
                    <ComboBoxItem Content="57600"/>
                    <ComboBoxItem Content="76800"/>
                    <ComboBoxItem Content="115200"/>
                    <ComboBoxItem Content="230400"/>
                    <ComboBoxItem Content="250000"/>
                </ComboBox>
            </StackPanel>
            <Grid Margin="10,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Label Content="Send command"/>
                <DockPanel Grid.Row="1" LastChildFill="True">
                    <Button Content="&gt;&gt;" DockPanel.Dock="Right" />
                    <TextBox Text="{Binding CurrentSendCommand, Mode=TwoWay}"/>
                </DockPanel>
            </Grid>
        </DockPanel>
        <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2">
            <TextBlock x:Name="txtOutput" TextWrapping="Wrap"   Background="WhiteSmoke">
            </TextBlock>
        </ScrollViewer>
        <TabControl Grid.Row="1" Grid.Column="1">
            <TabItem Header="Record">
                <Grid>
                    <StackPanel Margin="5,0,5,0">
                        <DockPanel LastChildFill="True">
                            <tk:IntegerUpDown x:Name="MacroPin" Value="1" Minimum="0" Maximum="{Binding MaxPinCount}" DockPanel.Dock="Right" Width="50" Height="25" />
                            <Label Content="Pin number:" DockPanel.Dock="Left" />
                        </DockPanel>
                        
                        <DockPanel LastChildFill="True" Height="20" Margin="5">
                            <RadioButton x:Name="rbtnPinOut" GroupName="PinInOrPinOut" Content="Pin in" DockPanel.Dock="Right" Width="100"/>
                            <RadioButton x:Name="rbtnPinIn" GroupName="PinInOrPinOut" Content="Pin out" IsChecked="True" DockPanel.Dock="Left" />
                        </DockPanel>
                        <DockPanel LastChildFill="True">
                            <tk:IntegerUpDown x:Name="MacroDelay" Increment="100" Value="1000" Minimum="0" DockPanel.Dock="Right" Width="80" Height="25" />
                            <Label Content="Wait (milliseconds):" DockPanel.Dock="Left" />
                        </DockPanel>

                        <StackPanel Margin="10">
                            <Button Content="Test" Margin="0,10" Click="BtnTestPinSettings_Click" />
                            <Button Content="Save" />
                            
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Save output">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="5,0,5,5">
                    <StackPanel HorizontalAlignment="Stretch">
                        <RadioButton Content="None" GroupName="OutputType" x:Name="rbtnOutputNone" IsChecked="True" Margin="25,0,0,0" />
                        <Separator Background="LightGray" Margin="0,5" />
                        <Grid>
                            <Expander IsExpanded="{Binding IsChecked, ElementName=rbtnOutputCSV, FallbackValue=false,TargetNullValue=false}">
                                <Expander.Header>
                                    <RadioButton Content="CSV (Comma Seperated Values)" GroupName="OutputType" x:Name="rbtnOutputCSV" />
                                </Expander.Header>
                                <StackPanel Grid.Row="1" Margin="0,20,0,0" x:Name="csvOuputSettings" IsEnabled="{Binding IsChecked, ElementName=rbtnOutputCSV}">
                                    <DockPanel LastChildFill="True">
                                        <Button Click="btnBrowseCSVOutput_Click" Width="30" Content="..." DockPanel.Dock="Right" Margin="5,0,0,0" />
                                        <TextBox x:Name="txtOutputCSV" TextAlignment="Right" Text="&lt;Select an output file&gt;" />
                                    </DockPanel>
                                </StackPanel>
                            </Expander>
                        </Grid>
                        <Separator Background="LightGray" Margin="0,5" />
                        <Grid>
                            <Expander IsExpanded="{Binding IsChecked, ElementName=rbtnOutputSQL, FallbackValue=false, TargetNullValue=false}">
                                <Expander.Header>
                                    <RadioButton Content="SQL (Specify)" GroupName="OutputType" x:Name="rbtnOutputSQL" />
                                </Expander.Header>
                                <StackPanel Margin="5,20,10,0">
                                    <StackPanel.Resources>
                                        <Style TargetType="Label">
                                            <Style.Setters>
                                                <Setter Property="Padding" Value="0,5" />
                                            </Style.Setters>
                                        </Style>
                                    </StackPanel.Resources>
                                    <Label Content="Instance name" />
                                    <TextBox />
                                    <Label Content="Database name" />
                                    <TextBox />
                                    <Label Content="Table name" />
                                    <TextBox />
                                    <Label Content="Username" />
                                    <TextBox />
                                    <Label Content="Password" />
                                    <PasswordBox />
                                    <Button Content="Test" Margin="0,5,0,0"/>
                                </StackPanel>
                            </Expander>
                            </Grid>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Playback" />
        </TabControl>
        <GridSplitter Grid.Row="1" Grid.Column="1" Width="3" HorizontalAlignment="Left" />
        <DockPanel LastChildFill="True" HorizontalAlignment="Stretch" Grid.Row="2">
            <DockPanel.Resources>
                <Style BasedOn="{StaticResource RadioButtonImageStyle}" TargetType="RadioButton">
                    <Style.Setters>
                        <Setter Property="Width" Value="{Binding ActualHeight, ElementName=BottomIconRow}" />
                    </Style.Setters>
                </Style>
            </DockPanel.Resources>
            <RadioButton DockPanel.Dock="Left" 
                         Width="30"
                         Style="{StaticResource RadioButtonImageStyle}"
                         ToolTip="Click to connect">
                <Viewbox Child="{StaticResource ConnectedButtonIcon}" />
            </RadioButton>     
            <Grid />
        </DockPanel>
    </Grid>
</Window>